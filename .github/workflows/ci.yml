name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    env:
      GOSUMDB: off
      GOPROXY: https://proxy.golang.org,direct
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: '**/go.sum'

      - name: Configure Go proxy
        run: |
          go env -w GOPROXY=${GOPROXY}

      - name: Clean and sync modules
        run: |
          go clean -modcache
          go mod download
          go mod verify
          go mod tidy -v
        continue-on-error: true

      - name: Aggregate checks and fail at end
        run: |
          set +e
          fails=0
          echo '== go build (show many errors) =='
          go build -gcflags=all=-e ./...
          fb=$?
          echo "go build exit=$fb"; fails=$((fails+fb))

          echo '== go vet =='
          go vet ./...
          fv=$?
          echo "go vet exit=$fv"; fails=$((fails+fv))

          echo '== staticcheck =='
          go install honnef.co/go/tools/cmd/staticcheck@latest
          $(go env GOPATH)/bin/staticcheck ./...
          fs=$?
          echo "staticcheck exit=$fs"; fails=$((fails+fs))

          echo '== golangci-lint =='
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          $(go env GOPATH)/bin/golangci-lint run --timeout=5m --out-format=github-actions
          fg=$?
          echo "golangci-lint exit=$fg"; fails=$((fails+fg))

          if [ $fails -ne 0 ]; then
            echo "::error::One or more checks failed (aggregate=$fails)"
            exit 1
          fi


